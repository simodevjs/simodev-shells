#!/bin/bash

#backup_destination="/Users/mohamedmahla/Gdrive/ •Go-Drive-->>>/-Perso🙅🏽‍♂️Docs=>/X-My tech/ _BCK-MAC "
backup_destination="/Volumes/Tube/X-Documents sur D/X-Gdrive/-Projects-Folio-User/-sdev-Shells/myMac-Shells"

# Predefined list of directories or files to backup
# You can keep this list empty if you always want to specify backup items via command-line arguments
backup_items=(
    "$HOME/.bash_profile"
    "/usr/local/bin/aa" #git scripts
    "/usr/local/bin/gg"
    "/usr/local/bin/bck"
    "/usr/local/bin/ccm" #for checksum
)

# Append command-line arguments to the backup_items array
for arg in "$@"; do
    backup_items+=("$arg")
done
echo -e "\033[1;34m------- ----------- ------------\033[0m"
echo -e "\033[1;34m------- - --------- ------------\033[0m"
echo -e "\033[1;34m------- -- -------- ------------\033[0m"
echo -e "\033[1;34m------- --- ------- ------------\033[0m"
echo -e "\033[1;34m------- ---- ------ ------------\033[0m"
echo -e "\033[1;34m------- ----- ----- ------------\033[0m"
echo -e "\033[1;34m------- ------ ---- ------------\033[0m"
echo -e "\033[1;34m------- ------- --- ------------\033[0m"
echo -e "\033[1;34m------- -------- -- ------------\033[0m"
echo -e "\033[1;34m------- --------- - ------------\033[0m"
echo -e "\033[1;34m------- ----------  ------------\033[0m"
echo -e "\033[1;34m------- ----------- ------------\033[0m"

echo -e "\033[1;35mStarting backup process...\033[0m" # Green and bold text

# Backup each item
for item in "${backup_items[@]}"; do
    item_name=$(basename "$item")

    echo -e "\033[1;34m--------------------------------\033[0m" # Blue and bold text
    echo -e "\033[1;33mPreparing backup for $item_name...\033[0m" # Yellow and bold text

    backup_path="${backup_destination}/${item_name}"
    # Check if backup directory exists
    if [ ! -d "$backup_path" ]; then
        echo -e "\033[1;93mBackup directory does not exist, creating now...\033[0m" # Red text
        mkdir -p "$backup_path"
    else
        echo -e "\033[0;36mBackup directory exists, proceeding with backup...\033[0m" # Cyan text
        if [ "$(ls -A "$backup_path")" ]; then
            echo -e "\033[1m\033[0;31mWarning: This will overwrite existing files in the backup.\033[0m" # Bold and red warning
        fi
    fi

    # Perform the backup
    rsync -avh --progress "$item" "$backup_path/"
    echo -e "\033[1;32m$item_name backed up successfully to $backup_path\033[0m" # Green and bold text, displaying backup path
done

echo -e "\033[1;34m--------------------------------\033[0m"
echo -e "\033[1;32mBackup completed successfully.\033[0m"

echo -e "\033[1;34m--------------------------------\033[0m"

cd "$backup_destination/"
pwd
mv -r .bash_profile/ BASH_PROFILE/
mv -r BASH_PROFILE/.bash_profile BASH_PROFILE/bash_profile
git add .
git commit -m "222"
git push
echo -e "\033[1;34m--------------------------------\033[0m"
echo -e "\033[1;34mUploaded to GiT Successfully.\033[0m"

echo -e "\033[1;34m--------------------------------\033[0m"

